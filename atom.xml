<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凭海临风的IT江湖</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pinghailinfeng.gitee.io/"/>
  <updated>2019-07-28T03:21:54.831Z</updated>
  <id>https://pinghailinfeng.gitee.io/</id>
  
  <author>
    <name>Jeff Sui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>how to Sort Python Dictionaries by Key or Value</title>
    <link href="https://pinghailinfeng.gitee.io/2019/07/28/how-to-Sort-Python-Dictionaries-by-Key-or-Value/"/>
    <id>https://pinghailinfeng.gitee.io/2019/07/28/how-to-Sort-Python-Dictionaries-by-Key-or-Value/</id>
    <published>2019-07-28T03:17:04.000Z</published>
    <updated>2019-07-28T03:21:54.831Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>众所周知,python中字典是无序的,那么该如何对字典排序呢？</p></blockquote><p>例如下面的字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numbers = &#123;<span class="string">'second'</span>: <span class="number">2</span>,<span class="string">'first'</span>: <span class="number">1</span>,  <span class="string">'third'</span>: <span class="number">3</span>, <span class="string">'Fourth'</span>: <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><p>我们可以通过list()函数打印value,<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;list(numbers)</span><br><span class="line">[<span class="string">'second'</span>, <span class="string">'first'</span>, <span class="string">'third'</span>, <span class="string">'Fourth'</span>]</span><br></pre></td></tr></table></figure></p><p><strong>备注</strong>: </p><blockquote><p>python3.6.4 以上的版本,字典根据插入的顺序自动排序</p></blockquote><h3 id="如何根据key-对字典排序"><a href="#如何根据key-对字典排序" class="headerlink" title="如何根据key 对字典排序"></a>如何根据key 对字典排序</h3><p>可以使用python的内置函数<code>sorted</code> 来对字典排序,如下面的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(numbers)</span><br><span class="line">[<span class="string">'Fourth'</span>, <span class="string">'first'</span>, <span class="string">'second'</span>, <span class="string">'third'</span>]</span><br></pre></td></tr></table></figure><p>结果有点差强人意,因为默认<code>sorted</code>函数是根据字母的顺序升序排列的,这里的字典中 key 恰好是字母，所以才会显示这个结果。</p><h3 id="根据value对字典排序"><a href="#根据value对字典排序" class="headerlink" title="根据value对字典排序"></a>根据value对字典排序</h3><p>用同样的方法,我们可以根据value来排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(numbers.values())</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="如何根据自定义的规则对字典排序"><a href="#如何根据自定义的规则对字典排序" class="headerlink" title="如何根据自定义的规则对字典排序"></a>如何根据自定义的规则对字典排序</h2><p><code>sorted</code>函数还有一个可选参数叫key,注意这里的<code>key</code>和字典的<code>key</code>没有关系,根据指定的<code>key</code> 来进行排序,实现的机制类似迭代器。来看这个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(numbers,key=numbers.__getitem__)</span><br><span class="line">[<span class="string">'first'</span>, <span class="string">'second'</span>, <span class="string">'third'</span>, <span class="string">'Fourth'</span>]</span><br></pre></td></tr></table></figure><p>这里我们使用了字典类中内置函数<code>__getitem__</code> 在遍历字典值的过程中,获取对应的值来对字典排序</p><p>关于<code>__getitem__</code> 函数的详细说明，请参考官方文档。</p><p>当然我们也可以使用<a href="https://www.pythoncentral.io/list-comprehension-in-python/" target="_blank" rel="noopener">列表推导</a>的方式来进行排序(实质上是转化成了列表来进行排序)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(numbers,key=numbers.__getitem__,reverse=<span class="literal">True</span>)</span><br><span class="line">[<span class="string">'Fourth'</span>, <span class="string">'third'</span>, <span class="string">'second'</span>, <span class="string">'first'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[value <span class="keyword">for</span> (key,value) <span class="keyword">in</span> sorted(numbers.items(),reverse=<span class="literal">True</span>)]</span><br><span class="line">[<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><h3 id="字典的key是数字或者字母的情况下对字典排序"><a href="#字典的key是数字或者字母的情况下对字典排序" class="headerlink" title="字典的key是数字或者字母的情况下对字典排序"></a>字典的key是数字或者字母的情况下对字典排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(numbers,key=str.lower)</span><br><span class="line">[<span class="string">'first'</span>, <span class="string">'Fourth'</span>, <span class="string">'second'</span>, <span class="string">'third'</span>]</span><br></pre></td></tr></table></figure><p>我们定义一个新的字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>month = dict(one=<span class="string">'January'</span>,</span><br><span class="line">                 two=<span class="string">'February'</span>,</span><br><span class="line">                 three=<span class="string">'March'</span>,</span><br><span class="line">                 four=<span class="string">'April'</span>,</span><br><span class="line">                 five=<span class="string">'May'</span>)</span><br></pre></td></tr></table></figure><p>通过<code>__getitem__</code>方法比较 我们定义的字典month中对应的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>numbermap = &#123;<span class="string">'one'</span>: <span class="number">1</span>, <span class="string">'two'</span>: <span class="number">2</span>, <span class="string">'three'</span>: <span class="number">3</span>, <span class="string">'four'</span>: <span class="number">4</span>, <span class="string">'five'</span>: <span class="number">5</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(month, key=numbermap.__getitem__)</span><br><span class="line">[<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>, <span class="string">'four'</span>, <span class="string">'five'</span>]</span><br></pre></td></tr></table></figure><p>同样的原理,可以使用列表推导来实现排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[month[i] <span class="keyword">for</span> i <span class="keyword">in</span> sorted(month,key=numbermap.__getitem__)]</span><br><span class="line">[<span class="string">'January'</span>, <span class="string">'February'</span>, <span class="string">'March'</span>, <span class="string">'April'</span>, <span class="string">'May'</span>]</span><br></pre></td></tr></table></figure><h3 id="定义一个方法来定义我们自己的排序规则"><a href="#定义一个方法来定义我们自己的排序规则" class="headerlink" title="定义一个方法来定义我们自己的排序规则"></a>定义一个方法来定义我们自己的排序规则</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">repeats</span><span class="params">(string)</span>:</span></span><br><span class="line">    <span class="comment"># Lower the case in the string</span></span><br><span class="line">    string = string.lower()</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Get a set of the unique letters</span></span><br><span class="line">    uniques = set(string)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Count the max occurrences of each unique letter</span></span><br><span class="line">    counts = [string.count(letter) <span class="keyword">for</span> letter <span class="keyword">in</span> uniques]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> max(counts)</span><br></pre></td></tr></table></figure><p>根据字母小写排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(month.values(), key=repeats, reverse=<span class="literal">True</span>)</span><br><span class="line">[<span class="string">'February'</span>, <span class="string">'January'</span>, <span class="string">'March'</span>, <span class="string">'April'</span>, <span class="string">'May'</span>]</span><br></pre></td></tr></table></figure><h3 id="使用lambda表达式排序"><a href="#使用lambda表达式排序" class="headerlink" title="使用lambda表达式排序"></a>使用lambda表达式排序</h3><p>使用lambda表达式  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(month.items(),key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>])</span><br><span class="line">[(<span class="string">'four'</span>, <span class="string">'April'</span>), (<span class="string">'two'</span>, <span class="string">'February'</span>), (<span class="string">'one'</span>, <span class="string">'January'</span>), (<span class="string">'three'</span>, <span class="string">'March'</span>), (<span class="string">'five'</span>, <span class="string">'May'</span>)]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(month.items(),key=<span class="keyword">lambda</span> x:x[<span class="number">0</span>])</span><br><span class="line">[(<span class="string">'five'</span>, <span class="string">'May'</span>), (<span class="string">'four'</span>, <span class="string">'April'</span>), (<span class="string">'one'</span>, <span class="string">'January'</span>), (<span class="string">'three'</span>, <span class="string">'March'</span>), (<span class="string">'two'</span>, <span class="string">'February'</span>)]</span><br></pre></td></tr></table></figure><p>其中： </p><ul><li>lambda x:x[1] 表明根据值排序 </li><li>lambda x:x[0] 表明根据键排序 </li></ul><p>以上就是python中对字典排序的一个总结,希望能帮到大家。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;众所周知,python中字典是无序的,那么该如何对字典排序呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如下面的字典：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;numbers = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;second&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;first&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;string&quot;&gt;&#39;third&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Fourth&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以通过list()函数打印value,&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;list(numbers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;second&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;first&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;third&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Fourth&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;python3.6.4 以上的版本,字典根据插入的顺序自动排序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;如何根据key-对字典排序&quot;&gt;&lt;a href=&quot;#如何根据key-对字典排序&quot; class=&quot;headerlink&quot; title=&quot;如何根据key 对字典排序&quot;&gt;&lt;/a&gt;如何根据key 对字典排序&lt;/h3&gt;&lt;p&gt;可以使用python的内置函数&lt;code&gt;sorted&lt;/code&gt; 来对字典排序,如下面的代码&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;sorted(numbers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;Fourth&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;first&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;second&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;third&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果有点差强人意,因为默认&lt;code&gt;sorted&lt;/code&gt;函数是根据字母的顺序升序排列的,这里的字典中 key 恰好是字母，所以才会显示这个结果。&lt;/p&gt;
&lt;h3 id=&quot;根据value对字典排序&quot;&gt;&lt;a href=&quot;#根据value对字典排序&quot; class=&quot;headerlink&quot; title=&quot;根据value对字典排序&quot;&gt;&lt;/a&gt;根据value对字典排序&lt;/h3&gt;&lt;p&gt;用同样的方法,我们可以根据value来排序&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;sorted(numbers.values())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="https://pinghailinfeng.gitee.io/categories/python/"/>
    
    
      <category term="python" scheme="https://pinghailinfeng.gitee.io/tags/python/"/>
    
      <category term="dict" scheme="https://pinghailinfeng.gitee.io/tags/dict/"/>
    
      <category term="sort" scheme="https://pinghailinfeng.gitee.io/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>javascript-undefined-description</title>
    <link href="https://pinghailinfeng.gitee.io/2019/06/11/javascript-undefined-description/"/>
    <id>https://pinghailinfeng.gitee.io/2019/06/11/javascript-undefined-description/</id>
    <published>2019-06-11T07:45:18.000Z</published>
    <updated>2019-06-11T09:28:03.554Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Javascript-基础拾遗之undefined"><a href="#Javascript-基础拾遗之undefined" class="headerlink" title="Javascript 基础拾遗之undefined"></a>Javascript 基础拾遗之undefined</h2><p>先看一个例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(a)); <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure><p>javascript中的数据类型包括<code>undefined</code>，<code>null</code>,<code>boolean</code>,<code>number</code>,<code>string</code>,<code>boolean</code>六种类型(ECMAScript 2015)</p><h3 id="undefined-小结"><a href="#undefined-小结" class="headerlink" title="undefined 小结"></a>undefined 小结</h3><p>undefined 类型的意思是当前对象未定义,适用于下面几种情况</p><ol><li>变量声明,但未赋值</li><li>对象没有赋值的属性,该属性的值为undefined</li><li>调用函数参数,但是未提供参数，该参数的值为undefined</li><li>函数没有返回值时,默认返回undefined</li></ol><p>再看下面的例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.</span></span><br><span class="line"><span class="keyword">var</span> i;</span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br><span class="line"><span class="comment">//2.</span></span><br><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"><span class="built_in">console</span>.log(o.p);</span><br><span class="line"><span class="comment">//3.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);    <span class="comment">// undefined</span></span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="comment">//4.</span></span><br><span class="line">myfunc()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myfunc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//console.log("my function.");</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(myfunc());</span><br></pre></td></tr></table></figure><p>需要区别下面这个情况,不同浏览器提示信息可能会不同(Chrome和IE测试)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(b);</span><br><span class="line"><span class="comment">// Uncaught ReferenceError: b is not defined</span></span><br></pre></td></tr></table></figure><h3 id="如何判断为空"><a href="#如何判断为空" class="headerlink" title="如何判断为空"></a>如何判断为空</h3><p>下面三种判断方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方式1</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> age === <span class="string">'undefined'</span>)</span><br><span class="line"><span class="comment">// 方式2</span></span><br><span class="line"><span class="keyword">if</span>(age === <span class="literal">undefined</span>)</span><br><span class="line"><span class="comment">// 方式3</span></span><br><span class="line"><span class="keyword">if</span>(varName) <span class="comment">//万能判断,包括boolean</span></span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined" target="_blank" rel="noopener">火狐JavaScript教程</a></p><p><a href="https://stackoverflow.com/questions/2559318/how-to-check-for-an-undefined-or-null-variable-in-javascript" target="_blank" rel="noopener">stackoverflow如何检查undefined</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Javascript-基础拾遗之undefined&quot;&gt;&lt;a href=&quot;#Javascript-基础拾遗之undefined&quot; class=&quot;headerlink&quot; title=&quot;Javascript 基础拾遗之undefined&quot;&gt;&lt;/a&gt;Javascript 
      
    
    </summary>
    
      <category term="javascript" scheme="https://pinghailinfeng.gitee.io/categories/javascript/"/>
    
    
      <category term="javascript" scheme="https://pinghailinfeng.gitee.io/tags/javascript/"/>
    
      <category term="javaweb" scheme="https://pinghailinfeng.gitee.io/tags/javaweb/"/>
    
  </entry>
  
  <entry>
    <title>Build path entry is missing /src/test/java missing问题解决</title>
    <link href="https://pinghailinfeng.gitee.io/2019/06/03/Maven-webapp-buildpath-missing-test-folder/"/>
    <id>https://pinghailinfeng.gitee.io/2019/06/03/Maven-webapp-buildpath-missing-test-folder/</id>
    <published>2019-06-03T09:04:00.000Z</published>
    <updated>2019-06-03T09:24:57.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h2><p>通过maven构建webapp,发现缺少java和test目录</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="[解决方案]"></a>[解决方案]</h2><blockquote><p>project –right click –build path– config build path – libraries – double click “JRE System Library”–choose “workspace default JRE”  OK</p></blockquote><p>如下图所示<br><img src="https://i.loli.net/2019/06/03/5cf4e41a0d68921253.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h2&gt;&lt;p&gt;通过maven构建webapp,发现缺少java和test目录&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=
      
    
    </summary>
    
      <category term="javaweb" scheme="https://pinghailinfeng.gitee.io/categories/javaweb/"/>
    
    
      <category term="maven" scheme="https://pinghailinfeng.gitee.io/tags/maven/"/>
    
      <category term="javaweb" scheme="https://pinghailinfeng.gitee.io/tags/javaweb/"/>
    
  </entry>
  
  <entry>
    <title>how-to-fix-cannot-change-version-of-project-dynamic-web-module-to-3.1-in-Eclipse</title>
    <link href="https://pinghailinfeng.gitee.io/2019/06/03/how-to-fix-cannot-change-version-of-project-dynamic-web-module-to-3.1-in-Eclipse/"/>
    <id>https://pinghailinfeng.gitee.io/2019/06/03/how-to-fix-cannot-change-version-of-project-dynamic-web-module-to-3.1-in-Eclipse/</id>
    <published>2019-06-03T01:47:24.000Z</published>
    <updated>2019-06-03T07:16:42.620Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1.问题描述"></a>1.问题描述</h2><p><img src="https://cdn.crunchify.com/wp-content/uploads/2015/06/Cannot-change-version-of-project-facet-Dynamic-Web-Module-to-3.0.png" alt></p><p>试图转换Dynamic Web Module 发生如下错误:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cannot change version of project facet Dynamic Web Module to 3.0 </span><br><span class="line">One or more constraints have not been satisfied</span><br></pre></td></tr></table></figure><a id="more"></a><p>操作步骤：</p><ol><li><p>右键点击项目</p></li><li><p>选择Properties</p></li><li><p>点击Project facet 选项</p></li><li><p>更改Dynamic Web Module, 2.3 到 3.1 ,如下图</p><p><img src="https://i.loli.net/2019/06/03/5cf4ab68ec48777079.png" alt></p></li></ol><h2 id="2-解决步骤"><a href="#2-解决步骤" class="headerlink" title="2. 解决步骤"></a>2. 解决步骤</h2><h3 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h3><ul><li><p>选择navigator 视图 </p><p><img src="https://i.loli.net/2019/06/03/5cf4aa24278d257489.png" alt></p></li></ul><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2:"></a>Step 2:</h3><ul><li><p>打开<code>org.eclipse.wst.common.project.facet.core.xml</code></p></li><li><p>修改jst.web 的值2.3 为 3.1</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">faceted-project</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">fixed</span> <span class="attr">facet</span>=<span class="string">"wst.jsdt.web"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">installed</span> <span class="attr">facet</span>=<span class="string">"jst.jaxrs"</span> <span class="attr">version</span>=<span class="string">"2.0"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">installed</span> <span class="attr">facet</span>=<span class="string">"wst.jsdt.web"</span> <span class="attr">version</span>=<span class="string">"1.0"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">installed</span> <span class="attr">facet</span>=<span class="string">"java"</span> <span class="attr">version</span>=<span class="string">"1.8"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">installed</span> <span class="attr">facet</span>=<span class="string">"jst.web"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">faceted-project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><em>注意</em> jst.web版本3.1,那么java版本必须是1.7以上才可以</p><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3:"></a>Step 3:</h3><ul><li><p>刷新项目</p><ul><li>鼠标右键点击项目</li><li>F5刷新项目</li></ul></li><li><p>清理项目</p><ul><li><p>点击顶部菜单栏 Project</p></li><li><p>选择Clean</p><p><img src="https://i.loli.net/2019/06/03/5cf496162a2e253063.png" alt></p></li></ul></li><li><p>maven更新</p><ul><li><p>鼠标右键点击项目名称</p></li><li><p>选择Maven</p></li><li><p>选择Update project</p></li></ul></li></ul><h2 id="3-问题总结"><a href="#3-问题总结" class="headerlink" title="3. 问题总结"></a>3. 问题总结</h2><p>没有清理项目就直接更新,缓存造成更新失败。</p><p>参考链接</p><ul><li><a href="https://crunchify.com/how-to-fix-cannot-change-version-of-project-facet-dynamic-web-module-to-3-0-error-in-eclipse/" target="_blank" rel="noopener">how-to-fix-cannot-change-version-of-project-dynamic-web-module-to-3.1-in-Eclipse</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-问题描述&quot;&gt;&lt;a href=&quot;#1-问题描述&quot; class=&quot;headerlink&quot; title=&quot;1.问题描述&quot;&gt;&lt;/a&gt;1.问题描述&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.crunchify.com/wp-content/uploads/2015/06/Cannot-change-version-of-project-facet-Dynamic-Web-Module-to-3.0.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;试图转换Dynamic Web Module 发生如下错误:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Cannot change version of project facet Dynamic Web Module to 3.0 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;One or more constraints have not been satisfied&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="javaweb" scheme="https://pinghailinfeng.gitee.io/categories/javaweb/"/>
    
    
      <category term="java" scheme="https://pinghailinfeng.gitee.io/tags/java/"/>
    
      <category term="maven" scheme="https://pinghailinfeng.gitee.io/tags/maven/"/>
    
      <category term="eclipse" scheme="https://pinghailinfeng.gitee.io/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>hexo建站搭建流程</title>
    <link href="https://pinghailinfeng.gitee.io/2019/05/31/hexo%E5%BB%BA%E7%AB%99%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/"/>
    <id>https://pinghailinfeng.gitee.io/2019/05/31/hexo建站搭建流程/</id>
    <published>2019-05-31T05:49:12.000Z</published>
    <updated>2019-06-03T07:57:59.281Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>下载并安装 Visual Studio Code, <a href="https://www.visualstudio.com/" target="_blank" rel="noopener">官方下载</a></p></li><li><p>下载并安装 Nodejs, <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">官方下载</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>npm 镜像源修改为 淘宝NPM镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>下载并安装 Git, <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">官方下载</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#配置名字和邮箱</span><br><span class="line">git config --global user.name &quot;test&quot;</span><br><span class="line">git config --global user.email &quot;test@.com&quot;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>安装 Hexo, <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>初始化博客目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd D</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">cnpm install</span><br></pre></td></tr></table></figure><p>启动服务器,本地预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="5"><li><p>Hexo 常用站点配置_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#网站标题</span><br><span class="line">title: test</span><br><span class="line">#作者昵称</span><br><span class="line">author: test</span><br><span class="line">#站点描述[签名]</span><br><span class="line">description: 站点描述</span><br><span class="line">#网站地址</span><br><span class="line">url: http://www.test.com</span><br><span class="line">#文章的链接格式</span><br><span class="line">permalink: :title.html</span><br></pre></td></tr></table></figure></li><li><p>添加标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#生成文件路径 source/tags/index.md</span><br><span class="line">hexo new page tags</span><br><span class="line">#编辑index.md,添加type</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure></li><li><p>添加分类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#生成文件路径 source/categories/index.md</span><br><span class="line">hexo new page categories</span><br><span class="line">#编辑index.md,添加type</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure></li><li><p>文章添加标签与分类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - hexo</span><br><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">  - github</span><br></pre></td></tr></table></figure></li><li><p>设置阅读全文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#在文章中使用 &lt;!-- more --&gt; 手动截断 </span><br><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure></li><li><p>Hexo 主题,这里选择 <strong>Next</strong>, <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">Github地址</a> <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">文档</a><br>安装 Next 主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>启用主题并设置语言,站点配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><p>主题常用配置,themes/next/_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#主题外观设定</span><br><span class="line">scheme: Gemini</span><br><span class="line">#设置菜单</span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">#设置代码高亮主题</span><br><span class="line">highlight_theme: night eighties</span><br><span class="line">#添加友情链接</span><br><span class="line">links:</span><br><span class="line">  test: http://www.test.com</span><br><span class="line">#文章自动添加版权声明</span><br><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">#返回顶部按钮显示百分比</span><br><span class="line">sidebar:</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure><p>设置RSS,安装<a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>安装hexo-generator-searchdb,添加百度/谷歌/本地 自定义站点内容搜索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>启用搜索,主题配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>配置搜索,站点配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 7777</span><br></pre></td></tr></table></figure><p>设置favicon.ico,将favicon.ico上传至站点根目录/source 目录下,主题配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: favicon.ico</span><br><span class="line">  medium: favicon.ico</span><br></pre></td></tr></table></figure></li><li><p>部署Hexo至Github<br>安装 hexo-deployer-git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>站点配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/github账号/github账号.github.io.git</span><br></pre></td></tr></table></figure><p>生成并部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></li><li><p>Github 自定义域名,由于Hexo每次部署到Github都会覆盖Github的域名配置,所以直接在Hexo配置,然后再部署,在根目录下的source目录下新建CNAME文件,无后缀名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#自定义域名</span><br><span class="line">xxx.com</span><br></pre></td></tr></table></figure></li><li><p>解析域名到 github.io,记录类型 = CNAME, 记录值 = github账号.github.io</p></li><li><p>码云新建一个项目, 路径 <a href="https://gitee.com/test/test.git" target="_blank" rel="noopener">https://gitee.com/test/test.git</a></p></li><li><p>Hexo 目录说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.deploy_git Hexo默认的.git配置文件夹</span><br><span class="line">public 根据source文件夹内容自动生成</span><br></pre></td></tr></table></figure></li><li><p>进入 Hexo根目录,执行以下命令,先删除 themes/next 目录下的 .gitignore 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#初始化仓库</span><br><span class="line">git init</span><br><span class="line">#添加远程主机</span><br><span class="line">git remote add origin https://gitee.com/test/test.git</span><br><span class="line">#添加目录下所有文件,不包含 .gitignore 声明的文件</span><br><span class="line">git add .</span><br><span class="line">#添加更新说明</span><br><span class="line">git commit -m &quot;hexo first commit&quot;</span><br><span class="line">#推送更新到云端服务器</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li><li><p>创建 test 目录,将 Git 的内容同步到本地并安装Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir test</span><br><span class="line">cd test</span><br><span class="line">git init</span><br><span class="line">git remote add origin https://gitee.com/test/test.git</span><br><span class="line">git fetch --all</span><br><span class="line">git reset --hard origin/master</span><br><span class="line">cnpm install</span><br></pre></td></tr></table></figure></li><li><p>blog 目录是A电脑, test 目录是B电脑, 更新文章后的同步操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#A电脑修改了 test.md,添加更新说明并推送到远程仓库,使用git status查看状态会显示刚刚更改过的文件状态</span><br><span class="line">git commit -m &quot;update test.md&quot;</span><br><span class="line">git push origin master</span><br><span class="line">git status</span><br><span class="line">#B电脑同步更新</span><br><span class="line">git pull origin master</span><br><span class="line">#可以通过指定当前目录工作分支与远程仓库分支之间的链接关系</span><br><span class="line">git branch --set-upstream-to=origin/master master</span><br></pre></td></tr></table></figure></li><li><p>hexo 数据文件,通用配置文件,新建 source/_data 目录, 主题的配置可以在此目录下配置,以 Next 主题为例,在此目录下新建 next.yml, 则 next.yml 的配置会覆盖 themes/next/_config.yml 的相同配置</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载并安装 Visual Studio Code, &lt;a href=&quot;https://www.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方下载&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载并安装 Nodejs, &lt;a href=&quot;http://nodejs.cn/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方下载&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;npm 镜像源修改为 淘宝NPM镜像&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载并安装 Git, &lt;a href=&quot;https://git-scm.com/download/win&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方下载&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#配置名字和邮箱&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &amp;quot;test&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &amp;quot;test@.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;p&gt;安装 Hexo, &lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cnpm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化博客目录&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo init blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cnpm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动服务器,本地预览&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="搭建博客" scheme="https://pinghailinfeng.gitee.io/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="搭建博客" scheme="https://pinghailinfeng.gitee.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>python创建字典的几种方法</title>
    <link href="https://pinghailinfeng.gitee.io/2019/05/28/python%E5%88%9B%E5%BB%BA%E5%AD%97%E5%85%B8%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://pinghailinfeng.gitee.io/2019/05/28/python创建字典的几种方法/</id>
    <published>2019-05-28T09:29:10.000Z</published>
    <updated>2019-06-03T07:57:50.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python创建字典的几种方法"><a href="#python创建字典的几种方法" class="headerlink" title="python创建字典的几种方法"></a>python创建字典的几种方法</h1><h2 id="1-创建空字典"><a href="#1-创建空字典" class="headerlink" title="1. 创建空字典"></a>1. 创建空字典</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dic = &#123;&#125;</span><br><span class="line">&gt;&gt;&gt; type(dic)</span><br><span class="line">&lt;type &apos;dict&apos;&gt;</span><br></pre></td></tr></table></figure><p>另一种形式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">temp = dict()</span><br><span class="line">temp[&apos;name&apos;] = &apos;xiaoming&apos;</span><br></pre></td></tr></table></figure></p><h2 id="2-直接赋值创建"><a href="#2-直接赋值创建" class="headerlink" title="2. 直接赋值创建"></a>2. 直接赋值创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dic = &#123;&apos;spam&apos;:1, &apos;egg&apos;:2, &apos;bar&apos;:3&#125;</span><br><span class="line">&gt;&gt;&gt; dic</span><br><span class="line">&#123;&apos;bar&apos;: 3, &apos;egg&apos;: 2, &apos;spam&apos;: 1&#125;</span><br></pre></td></tr></table></figure><h2 id="3-通过关键字dict和关键字参数创建"><a href="#3-通过关键字dict和关键字参数创建" class="headerlink" title="3. 通过关键字dict和关键字参数创建"></a>3. 通过关键字dict和关键字参数创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dic = dict(spam = 1, egg = 2, bar =3)</span><br><span class="line">&gt;&gt;&gt; dic</span><br><span class="line">&#123;&apos;bar&apos;: 3, &apos;egg&apos;: 2, &apos;spam&apos;: 1&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="4-通过二元组列表创建"><a href="#4-通过二元组列表创建" class="headerlink" title="4. 通过二元组列表创建"></a>4. 通过二元组列表创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; list = [(&apos;spam&apos;, 1), (&apos;egg&apos;, 2), (&apos;bar&apos;, 3)]</span><br><span class="line">&gt;&gt;&gt; dic = dict(list)</span><br><span class="line">&gt;&gt;&gt; dic</span><br><span class="line">&#123;&apos;bar&apos;: 3, &apos;egg&apos;: 2, &apos;spam&apos;: 1&#125;</span><br></pre></td></tr></table></figure><h2 id="5-dict和zip结合创建"><a href="#5-dict和zip结合创建" class="headerlink" title="5. dict和zip结合创建"></a>5. dict和zip结合创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dic = dict(zip(&apos;abc&apos;, [1, 2, 3]))</span><br><span class="line">&gt;&gt;&gt; dic</span><br><span class="line">&#123;&apos;a&apos;: 1, &apos;c&apos;: 3, &apos;b&apos;: 2&#125;</span><br></pre></td></tr></table></figure><h2 id="6-通过字典推导式创建"><a href="#6-通过字典推导式创建" class="headerlink" title="6. 通过字典推导式创建"></a>6. 通过字典推导式创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dic = &#123;i:2*i for i in range(3)&#125;</span><br><span class="line">&gt;&gt;&gt; dic</span><br><span class="line">&#123;0: 0, 1: 2, 2: 4&#125;</span><br></pre></td></tr></table></figure><h2 id="7-通过dict-fromkeys-创建"><a href="#7-通过dict-fromkeys-创建" class="headerlink" title="7. 通过dict.fromkeys()创建"></a>7. 通过dict.fromkeys()创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dic = dict.fromkeys(range(3), &apos;x&apos;)</span><br><span class="line">&gt;&gt;&gt; dic</span><br><span class="line">&#123;0: &apos;x&apos;, 1: &apos;x&apos;, 2: &apos;x&apos;&#125;</span><br></pre></td></tr></table></figure><h2 id="8-其他"><a href="#8-其他" class="headerlink" title="8. 其他"></a>8. 其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; list = [&apos;x&apos;, 1, &apos;y&apos;, 2, &apos;z&apos;, 3]</span><br><span class="line">&gt;&gt;&gt; dic = dict(zip(list[::2], list[1::2]))</span><br><span class="line">&gt;&gt;&gt; dic</span><br><span class="line">&#123;&apos;y&apos;: 2, &apos;x&apos;: 1, &apos;z&apos;: 3&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python创建字典的几种方法&quot;&gt;&lt;a href=&quot;#python创建字典的几种方法&quot; class=&quot;headerlink&quot; title=&quot;python创建字典的几种方法&quot;&gt;&lt;/a&gt;python创建字典的几种方法&lt;/h1&gt;&lt;h2 id=&quot;1-创建空字典&quot;&gt;&lt;a href=&quot;#1-创建空字典&quot; class=&quot;headerlink&quot; title=&quot;1. 创建空字典&quot;&gt;&lt;/a&gt;1. 创建空字典&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dic = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; type(dic)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &amp;apos;dict&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一种形式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;temp = dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;temp[&amp;apos;name&amp;apos;] = &amp;apos;xiaoming&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-直接赋值创建&quot;&gt;&lt;a href=&quot;#2-直接赋值创建&quot; class=&quot;headerlink&quot; title=&quot;2. 直接赋值创建&quot;&gt;&lt;/a&gt;2. 直接赋值创建&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dic = &amp;#123;&amp;apos;spam&amp;apos;:1, &amp;apos;egg&amp;apos;:2, &amp;apos;bar&amp;apos;:3&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;bar&amp;apos;: 3, &amp;apos;egg&amp;apos;: 2, &amp;apos;spam&amp;apos;: 1&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-通过关键字dict和关键字参数创建&quot;&gt;&lt;a href=&quot;#3-通过关键字dict和关键字参数创建&quot; class=&quot;headerlink&quot; title=&quot;3. 通过关键字dict和关键字参数创建&quot;&gt;&lt;/a&gt;3. 通过关键字dict和关键字参数创建&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dic = dict(spam = 1, egg = 2, bar =3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; dic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;bar&amp;apos;: 3, &amp;apos;egg&amp;apos;: 2, &amp;apos;spam&amp;apos;: 1&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="https://pinghailinfeng.gitee.io/categories/python/"/>
    
    
      <category term="python" scheme="https://pinghailinfeng.gitee.io/tags/python/"/>
    
      <category term="字典" scheme="https://pinghailinfeng.gitee.io/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>python操作sqlite3</title>
    <link href="https://pinghailinfeng.gitee.io/2019/05/28/python%E6%93%8D%E4%BD%9Csqlite3/"/>
    <id>https://pinghailinfeng.gitee.io/2019/05/28/python操作sqlite3/</id>
    <published>2019-05-28T09:24:42.000Z</published>
    <updated>2019-05-31T07:06:23.862Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sqlite3-简介"><a href="#sqlite3-简介" class="headerlink" title="sqlite3 简介"></a>sqlite3 简介</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">SQLite数据库是一款非常小巧的嵌入式开源数据库软件，也就是说</span><br><span class="line">没有独立的维护进程，所有的维护都来自于程序本身。</span><br><span class="line">在python中，使用sqlite3创建数据库的连接，当我们指定的数据库文件不存在的时候</span><br><span class="line">连接对象会自动创建数据库文件；如果数据库文件已经存在，则连接对象不会再创建</span><br><span class="line">数据库文件，而是直接打开该数据库文件。</span><br><span class="line">    连接对象可以是硬盘上面的数据库文件，也可以是建立在内存中的，在内存中的数据库</span><br><span class="line">    执行完任何操作后，都不需要提交事务的(commit)</span><br><span class="line"></span><br><span class="line">    创建在硬盘上面： conn = sqlite3.connect(&apos;c:\\test\\test.db&apos;)</span><br><span class="line">    创建在内存上面： conn = sqlite3.connect(&apos;&quot;memory:&apos;)</span><br><span class="line"></span><br><span class="line">    下面我们一硬盘上面创建数据库文件为例来具体说明：</span><br><span class="line">    conn = sqlite3.connect(&apos;c:\\test\\hongten.db&apos;)</span><br><span class="line">    其中conn对象是数据库链接对象，而对于数据库链接对象来说，具有以下操作：</span><br><span class="line"></span><br><span class="line">        commit()            --事务提交</span><br><span class="line">        rollback()          --事务回滚</span><br><span class="line">        close()             --关闭一个数据库链接</span><br><span class="line">        cursor()            --创建一个游标</span><br><span class="line"></span><br><span class="line">    cu = conn.cursor()</span><br><span class="line">    这样我们就创建了一个游标对象：cu</span><br><span class="line">    在sqlite3中，所有sql语句的执行都要在游标对象的参与下完成</span><br><span class="line">    对于游标对象cu，具有以下具体操作：</span><br><span class="line"></span><br><span class="line">        execute()           --执行一条sql语句</span><br><span class="line">        executemany()       --执行多条sql语句</span><br><span class="line">        close()             --游标关闭</span><br><span class="line">        fetchone()          --从结果中取出一条记录</span><br><span class="line">        fetchmany()         --从结果中取出多条记录</span><br><span class="line">        fetchall()          --从结果中取出所有记录</span><br><span class="line">        scroll()            --游标滚动</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="sqlite3常用操作"><a href="#sqlite3常用操作" class="headerlink" title="sqlite3常用操作"></a>sqlite3常用操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Date    : 2019-03-14 16:10:24</span><br><span class="line"># @Author  : Jeff.Sui (215687736@qq.com)</span><br><span class="line"># @Link    : http://example.org</span><br><span class="line"># @Version : $Id$</span><br><span class="line">import sqlite3</span><br><span class="line"></span><br><span class="line">con = sqlite3.connect(&quot;:memory:&quot;)</span><br><span class="line"></span><br><span class="line">c = con.cursor()</span><br><span class="line"></span><br><span class="line"># Create table</span><br><span class="line">c.execute(&apos;&apos;&apos;CREATE TABLE stocks</span><br><span class="line">             (date text, trans text, symbol text, qty real, price real)&apos;&apos;&apos;)</span><br><span class="line"></span><br><span class="line"># Insert a row of data</span><br><span class="line">c.execute(&quot;INSERT INTO stocks VALUES (?,?,?,?,?)&quot;, (&apos;2006-03-27&apos;,&apos;BUY&apos;,&apos;RHAT&apos;,100,60.14))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Larger example that inserts many records at a time</span><br><span class="line">purchases = [(&apos;2006-03-28&apos;, &apos;BUY&apos;, &apos;IBM&apos;, 1000, 45.00),</span><br><span class="line">             (&apos;2006-04-05&apos;, &apos;BUY&apos;, &apos;MSFT&apos;, 1000, 72.00),</span><br><span class="line">             (&apos;2006-04-06&apos;, &apos;SELL&apos;, &apos;IBM&apos;, 500, 53.00),</span><br><span class="line">             (&apos;2006-04-07&apos;, &apos;SELL&apos;, &apos;MSFT&apos;, 500, 74.00),</span><br><span class="line">             (&apos;2006-04-08&apos;, &apos;SELL&apos;, &apos;IBM&apos;, 500, 54.00),</span><br><span class="line">             (&apos;2006-04-09&apos;, &apos;SELL&apos;, &apos;MSFT&apos;, 500, 73.00),</span><br><span class="line">             (&apos;2006-04-10&apos;, &apos;SELL&apos;, &apos;MSFT&apos;, 500, 75.00),</span><br><span class="line">             (&apos;2006-04-12&apos;, &apos;SELL&apos;, &apos;IBM&apos;, 500, 55.00),</span><br><span class="line">            ]</span><br><span class="line">c.executemany(&apos;INSERT INTO stocks VALUES (?,?,?,?,?)&apos;, purchases)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Save (commit) the changes</span><br><span class="line">con.commit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Do this instead</span><br><span class="line">t = (&apos;RHAT&apos;,)</span><br><span class="line">c.execute(&apos;SELECT * FROM stocks WHERE symbol=?&apos;, t)</span><br><span class="line">#print(c.fetchone())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#for row in c.execute(&apos;SELECT * FROM stocks ORDER BY price&apos;):</span><br><span class="line">#    print(row)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">#for row in c.execute(&apos;SELECT * FROM stocks LIMIT 5 OFFSET 0&apos;):</span><br><span class="line">#    print(row)</span><br><span class="line">for row in c.execute(&apos;SELECT * FROM stocks LIMIT 5 OFFSET 1&apos;):</span><br><span class="line">    print(row)</span><br><span class="line">#Select Top N * From</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ====================================================================================</span><br><span class="line"># SQLite 日期 &amp; 时间</span><br><span class="line"># ====================================================================================</span><br><span class="line">print(&apos;=&apos;*30)</span><br><span class="line">print(&apos;SQLite 日期 &amp; 时间&apos;)</span><br><span class="line">print(&apos;=&apos;*30)</span><br><span class="line"></span><br><span class="line"># 计算当前日期</span><br><span class="line">c.execute(&quot;SELECT date(&apos;now&apos;)&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算当前月份的最后一天：</span><br><span class="line">c.execute(&quot;SELECT date(&apos;now&apos;,&apos;start of month&apos;,&apos;+1 month&apos;,&apos;-1 day&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算给定 UNIX 时间戳 1092941466 的日期和时间：</span><br><span class="line">c.execute(&quot;SELECT datetime(1092941466, &apos;unixepoch&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算给定 UNIX 时间戳 1092941466 相对本地时区的日期和时间：</span><br><span class="line">c.execute(&quot;SELECT datetime(1092941466, &apos;unixepoch&apos;, &apos;localtime&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算当前的 UNIX 时间戳：</span><br><span class="line">c.execute(&quot;SELECT datetime(1092941466, &apos;unixepoch&apos;, &apos;localtime&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算美国&quot;独立宣言&quot;签署以来的天数：</span><br><span class="line">c.execute(&quot;SELECT julianday(&apos;now&apos;) - julianday(&apos;1776-07-04&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算从 2004 年某一特定时刻以来的秒数：</span><br><span class="line">c.execute(&quot;SELECT strftime(&apos;%s&apos;,&apos;now&apos;) - strftime(&apos;%s&apos;,&apos;2004-01-01 02:34:56&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算当年 10 月的第一个星期二的日期：</span><br><span class="line">c.execute(&quot;SELECT date(&apos;now&apos;,&apos;start of year&apos;,&apos;+9 months&apos;,&apos;weekday 2&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算从 UNIX 纪元算起的以秒为单位的时间（类似 strftime(&apos;%s&apos;,&apos;now&apos;) ，不同的是这里有包括小数部分）：</span><br><span class="line">c.execute(&quot;SELECT (julianday(&apos;now&apos;) - 2440587.5)*86400.0;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 在 UTC 与本地时间值之间进行转换，当格式化日期时，使用 utc 或 localtime 修饰符，如下所示：</span><br><span class="line">c.execute(&quot;SELECT time(&apos;12:00&apos;, &apos;localtime&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line">c.execute(&quot;SELECT time(&apos;12:00&apos;, &apos;utc&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line">con.close()</span><br><span class="line"></span><br><span class="line"># ====================================================================================</span><br><span class="line"># SQLite 常用函数</span><br><span class="line"># ====================================================================================</span><br><span class="line"></span><br><span class="line">print(&apos;=&apos;*30)</span><br><span class="line">print(&apos;SQLite 常用函数&apos;)</span><br><span class="line">print(&apos;=&apos;*30)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">con = sqlite3.connect(&quot;:memory:&quot;)</span><br><span class="line"></span><br><span class="line">c = con.cursor()</span><br><span class="line"></span><br><span class="line"># Create table</span><br><span class="line">c.execute(&apos;&apos;&apos;CREATE TABLE COMPANY</span><br><span class="line">            (ID integer, NAME text, AGE integer, ADDRESS text, SALARY real)&apos;&apos;&apos;)</span><br><span class="line"></span><br><span class="line"># Larger example that inserts many records at a time</span><br><span class="line">purchases = [(1,&apos;Paul&apos;,32,&apos;California&apos;,20000.0),</span><br><span class="line">             (2,&apos;Allen&apos;,25,&apos;Texas&apos;,15000.0),</span><br><span class="line">             (3,&apos;Teddy&apos;,23,&apos;Norway&apos;,20000.0),</span><br><span class="line">             (4,&apos;Mark&apos;,25,&apos;Rich-Mond&apos;,65000.0),</span><br><span class="line">             (5,&apos;David&apos;,27,&apos;Texas&apos;,85000.0),</span><br><span class="line">             (6,&apos;Kim&apos;,22,&apos;South-Hall&apos;,45000.0),</span><br><span class="line">             (7,&apos;James&apos;,24,&apos;Houston&apos;,10000.0)]</span><br><span class="line">c.executemany(&apos;INSERT INTO COMPANY VALUES (?,?,?,?,?)&apos;, purchases)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Save (commit) the changes</span><br><span class="line">con.commit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 返回数据库表最后 n 行记录</span><br><span class="line"># 先计算一个数据库表中的行数</span><br><span class="line">c.execute(&quot;SELECT count(*) FROM COMPANY;&quot;)</span><br><span class="line">last = c.fetchone()[0]</span><br><span class="line">n = 5</span><br><span class="line">c.execute(&quot;SELECT * FROM COMPANY LIMIT ? OFFSET ?;&quot;, (n, last-n))</span><br><span class="line">for row in c:</span><br><span class="line">    print(row)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 计算一个数据库表中的行数</span><br><span class="line">c.execute(&quot;SELECT count(*) FROM COMPANY;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 选择某列的最大值</span><br><span class="line">c.execute(&quot;SELECT max(salary) FROM COMPANY;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 选择某列的最小值</span><br><span class="line">c.execute(&quot;SELECT min(salary) FROM COMPANY;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 计算某列的平均值</span><br><span class="line">c.execute(&quot;SELECT avg(salary) FROM COMPANY;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 为一个数值列计算总和</span><br><span class="line">c.execute(&quot;SELECT sum(salary) FROM COMPANY;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数</span><br><span class="line">c.execute(&quot;SELECT random() AS Random;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 返回数值参数的绝对值</span><br><span class="line">c.execute(&quot;SELECT abs(5), abs(-15), abs(NULL), abs(0), abs(&apos;ABC&apos;);&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 把字符串转换为大写字母</span><br><span class="line">c.execute(&quot;SELECT upper(name) FROM COMPANY;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 把字符串转换为小写字母</span><br><span class="line">c.execute(&quot;SELECT lower(name) FROM COMPANY;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 返回字符串的长度</span><br><span class="line">c.execute(&quot;SELECT name, length(name) FROM COMPANY;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># 返回 SQLite 库的版本</span><br><span class="line">c.execute(&quot;SELECT sqlite_version() AS &apos;SQLite Version&apos;;&quot;)</span><br><span class="line">print(c.fetchone())</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line">c.execute(&quot;SELECT CURRENT_TIMESTAMP;&quot;)</span><br><span class="line">print(c.fetchone())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;sqlite3-简介&quot;&gt;&lt;a href=&quot;#sqlite3-简介&quot; class=&quot;headerlink&quot; title=&quot;sqlite3 简介&quot;&gt;&lt;/a&gt;sqlite3 简介&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SQLite数据库是一款非常小巧的嵌入式开源数据库软件，也就是说&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;没有独立的维护进程，所有的维护都来自于程序本身。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在python中，使用sqlite3创建数据库的连接，当我们指定的数据库文件不存在的时候&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;连接对象会自动创建数据库文件；如果数据库文件已经存在，则连接对象不会再创建&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;数据库文件，而是直接打开该数据库文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    连接对象可以是硬盘上面的数据库文件，也可以是建立在内存中的，在内存中的数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    执行完任何操作后，都不需要提交事务的(commit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    创建在硬盘上面： conn = sqlite3.connect(&amp;apos;c:\\test\\test.db&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    创建在内存上面： conn = sqlite3.connect(&amp;apos;&amp;quot;memory:&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    下面我们一硬盘上面创建数据库文件为例来具体说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    conn = sqlite3.connect(&amp;apos;c:\\test\\hongten.db&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    其中conn对象是数据库链接对象，而对于数据库链接对象来说，具有以下操作：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        commit()            --事务提交&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rollback()          --事务回滚&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close()             --关闭一个数据库链接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cursor()            --创建一个游标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cu = conn.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    这样我们就创建了一个游标对象：cu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    在sqlite3中，所有sql语句的执行都要在游标对象的参与下完成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    对于游标对象cu，具有以下具体操作：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        execute()           --执行一条sql语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        executemany()       --执行多条sql语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close()             --游标关闭&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fetchone()          --从结果中取出一条记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fetchmany()         --从结果中取出多条记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fetchall()          --从结果中取出所有记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scroll()            --游标滚动&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="https://pinghailinfeng.gitee.io/categories/python/"/>
    
    
      <category term="python" scheme="https://pinghailinfeng.gitee.io/tags/python/"/>
    
      <category term="sqlite3" scheme="https://pinghailinfeng.gitee.io/tags/sqlite3/"/>
    
  </entry>
  
  <entry>
    <title>selenium元素操作封装</title>
    <link href="https://pinghailinfeng.gitee.io/2019/05/28/selenium%E5%85%83%E7%B4%A0%E6%93%8D%E4%BD%9C%E5%B0%81%E8%A3%85/"/>
    <id>https://pinghailinfeng.gitee.io/2019/05/28/selenium元素操作封装/</id>
    <published>2019-05-28T09:14:18.000Z</published>
    <updated>2019-06-03T07:57:15.074Z</updated>
    
    <content type="html"><![CDATA[<h1 id="selenium-常用的元素定位操作"><a href="#selenium-常用的元素定位操作" class="headerlink" title="selenium 常用的元素定位操作"></a>selenium 常用的元素定位操作</h1><h2 id="Selenium提供了8种定位方式。"><a href="#Selenium提供了8种定位方式。" class="headerlink" title="Selenium提供了8种定位方式。"></a>Selenium提供了8种定位方式。</h2><ul><li>id</li><li>name</li><li>class name</li><li>tag name</li><li>link text</li><li>partial link text</li><li>xpath</li><li>css selector</li></ul><h2 id="这8种定位方式在Python-selenium中所对应的方法为："><a href="#这8种定位方式在Python-selenium中所对应的方法为：" class="headerlink" title="这8种定位方式在Python selenium中所对应的方法为："></a>这8种定位方式在Python selenium中所对应的方法为：</h2><ul><li><p>find_element_by_id()</p></li><li><p>find_element_by_name()</p></li><li><p>find_element_by_class_name()</p></li><li><p>find_element_by_tag_name()</p></li><li><p>find_element_by_link_text()</p></li><li><p>find_element_by_partial_link_text()</p></li><li><p>find_element_by_xpath()</p></li><li><p>find_element_by_css_selector()</p></li></ul><a id="more"></a><h2 id="常用元素定位封装"><a href="#常用元素定位封装" class="headerlink" title="常用元素定位封装"></a>常用元素定位封装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_locate_element</span><span class="params">(self, selector)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    to locate element by selector</span></span><br><span class="line"><span class="string">    :arg</span></span><br><span class="line"><span class="string">    selector should be passed by an example with "i,xxx"</span></span><br><span class="line"><span class="string">    "x,//*[@id='langs']/button"</span></span><br><span class="line"><span class="string">    :returns</span></span><br><span class="line"><span class="string">    DOM element</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> self.by_char <span class="keyword">not</span> <span class="keyword">in</span> selector:</span><br><span class="line">        <span class="keyword">return</span> self.base_driver.find_element_by_id(selector)</span><br><span class="line"></span><br><span class="line">    selector_by = selector.split(self.by_char)[<span class="number">0</span>].strip()</span><br><span class="line">    selector_value = selector.split(self.by_char)[<span class="number">1</span>].strip()</span><br><span class="line">    <span class="keyword">if</span> selector_by == <span class="string">"i"</span> <span class="keyword">or</span> selector_by == <span class="string">'id'</span>:</span><br><span class="line">        element = self.base_driver.find_element_by_id(selector_value)</span><br><span class="line">    <span class="keyword">elif</span> selector_by == <span class="string">"n"</span> <span class="keyword">or</span> selector_by == <span class="string">'name'</span>:</span><br><span class="line">        element = self.base_driver.find_element_by_name(selector_value)</span><br><span class="line">    <span class="keyword">elif</span> selector_by == <span class="string">"c"</span> <span class="keyword">or</span> selector_by == <span class="string">'class_name'</span>:</span><br><span class="line">        element = self.base_driver.find_element_by_class_name(selector_value)</span><br><span class="line">    <span class="keyword">elif</span> selector_by == <span class="string">"l"</span> <span class="keyword">or</span> selector_by == <span class="string">'link_text'</span>:</span><br><span class="line">        element = self.base_driver.find_element_by_link_text(selector_value)</span><br><span class="line">    <span class="keyword">elif</span> selector_by == <span class="string">"p"</span> <span class="keyword">or</span> selector_by == <span class="string">'partial_link_text'</span>:</span><br><span class="line">        element = self.base_driver.find_element_by_partial_link_text(selector_value)</span><br><span class="line">    <span class="keyword">elif</span> selector_by == <span class="string">"t"</span> <span class="keyword">or</span> selector_by == <span class="string">'tag_name'</span>:</span><br><span class="line">        element = self.base_driver.find_element_by_tag_name(selector_value)</span><br><span class="line">    <span class="keyword">elif</span> selector_by == <span class="string">"x"</span> <span class="keyword">or</span> selector_by == <span class="string">'xpath'</span>:</span><br><span class="line">        element = self.base_driver.find_element_by_xpath(selector_value)</span><br><span class="line">    <span class="keyword">elif</span> selector_by == <span class="string">"s"</span> <span class="keyword">or</span> selector_by == <span class="string">'css_selector'</span>:</span><br><span class="line">        element = self.base_driver.find_element_by_css_selector(selector_value)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> NameError(<span class="string">"Please enter a valid type of targeting elements."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> element</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;selenium-常用的元素定位操作&quot;&gt;&lt;a href=&quot;#selenium-常用的元素定位操作&quot; class=&quot;headerlink&quot; title=&quot;selenium 常用的元素定位操作&quot;&gt;&lt;/a&gt;selenium 常用的元素定位操作&lt;/h1&gt;&lt;h2 id=&quot;Selenium提供了8种定位方式。&quot;&gt;&lt;a href=&quot;#Selenium提供了8种定位方式。&quot; class=&quot;headerlink&quot; title=&quot;Selenium提供了8种定位方式。&quot;&gt;&lt;/a&gt;Selenium提供了8种定位方式。&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;class name&lt;/li&gt;
&lt;li&gt;tag name&lt;/li&gt;
&lt;li&gt;link text&lt;/li&gt;
&lt;li&gt;partial link text&lt;/li&gt;
&lt;li&gt;xpath&lt;/li&gt;
&lt;li&gt;css selector&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;这8种定位方式在Python-selenium中所对应的方法为：&quot;&gt;&lt;a href=&quot;#这8种定位方式在Python-selenium中所对应的方法为：&quot; class=&quot;headerlink&quot; title=&quot;这8种定位方式在Python selenium中所对应的方法为：&quot;&gt;&lt;/a&gt;这8种定位方式在Python selenium中所对应的方法为：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;find_element_by_id()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;find_element_by_name()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;find_element_by_class_name()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;find_element_by_tag_name()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;find_element_by_link_text()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;find_element_by_partial_link_text()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;find_element_by_xpath()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;find_element_by_css_selector()&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="自动化测试" scheme="https://pinghailinfeng.gitee.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="selenium" scheme="https://pinghailinfeng.gitee.io/tags/selenium/"/>
    
      <category term="web test" scheme="https://pinghailinfeng.gitee.io/tags/web-test/"/>
    
  </entry>
  
  <entry>
    <title>使用selenium访问爱奇艺网站</title>
    <link href="https://pinghailinfeng.gitee.io/2019/05/28/using-selenium-visit-iqiyi-website/"/>
    <id>https://pinghailinfeng.gitee.io/2019/05/28/using-selenium-visit-iqiyi-website/</id>
    <published>2019-05-28T07:23:36.000Z</published>
    <updated>2019-06-03T07:57:33.701Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用selenium访问爱奇艺网站"><a href="#使用selenium访问爱奇艺网站" class="headerlink" title="使用selenium访问爱奇艺网站"></a>使用<code>selenium</code>访问爱奇艺网站</h1><blockquote><p>selenium 是一种常用的自动化测试工具。它支持各种浏览器，包括 Chrome，Safari，Firefox 等主流界面式浏览器，如果你在这些浏览器里面安装一个 Selenium 的插件，还可以通过录制，快速生成脚本。</p><p>selenium 支持多种主流的开发语言，比如<code>Ruby</code>，<code>java</code>，<code>python</code>，<code>javascript</code>。</p></blockquote><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>python3.7.3</p><p>运行 <code>pip install selenium</code> 就可以直接下载最新的selenium版本</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>浏览器:chrome 70.0.3538.77 </p><p>操作系统：win7</p><p>selenium版本: 3.14.1</p><p>chromedriver: <a href="https://npm.taobao.org/mirrors/chromedriver/70.0.3538.97/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/chromedriver/70.0.3538.97/</a></p><h2 id="使用selenium-打开和关闭浏览器"><a href="#使用selenium-打开和关闭浏览器" class="headerlink" title="使用selenium 打开和关闭浏览器"></a>使用selenium 打开和关闭浏览器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">"http://www.iqiyi.com/"</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="定位搜索框"><a href="#定位搜索框" class="headerlink" title="定位搜索框"></a>定位搜索框</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search_xpath=<span class="string">r"//*[@id='nav_searchboxIn']/input"</span></span><br><span class="line">driver.find_element_by_xpath(search_xpath).send_keys(<span class="string">"复仇者联盟"</span>)</span><br></pre></td></tr></table></figure><h2 id="点击搜索图片"><a href="#点击搜索图片" class="headerlink" title="点击搜索图片"></a>点击搜索图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search_button=<span class="string">r"//*[@id='nav_searchboxOut']/span"</span></span><br><span class="line">driver.find_element_by_xpath(search_button).click()</span><br></pre></td></tr></table></figure><h2 id="切换tab页"><a href="#切换tab页" class="headerlink" title="切换tab页"></a>切换tab页</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入键盘操作--20190528更新</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="comment">#此处通过键盘操作切换tab页</span></span><br><span class="line">driver.find_element_by_tag_name(<span class="string">"body"</span>).send_keys(Keys.CONTROL + <span class="string">"t"</span>)</span><br><span class="line"><span class="comment">#all_handles 保存所有已经打开的tab窗体</span></span><br><span class="line">all_handles = driver.window_handles</span><br><span class="line">print(driver.window_handles)</span><br><span class="line">index_handle=driver.current_window_handle</span><br><span class="line">print(index_handle)</span><br><span class="line"><span class="comment">#用switch_to方法切换到tab窗体</span></span><br><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> all_handles:</span><br><span class="line">    <span class="keyword">if</span> handle!=index_handle:</span><br><span class="line">        print(<span class="string">'now is search window'</span>)</span><br><span class="line">        search_handle = handle</span><br><span class="line">driver.switch_to.window(search_handle)</span><br></pre></td></tr></table></figure><h2 id="打印页面的title，并截图"><a href="#打印页面的title，并截图" class="headerlink" title="打印页面的title，并截图"></a>打印页面的<code>title</code>，并截图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(driver.title)</span><br><span class="line">driver.get_screenshot_as_file(<span class="string">"aqiyi.png"</span>)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文主要介绍了自动化工具<code>selenium</code>的基本使用，如何对页面元素进行基本操作，实现自动抓取关键字图片功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用selenium访问爱奇艺网站&quot;&gt;&lt;a href=&quot;#使用selenium访问爱奇艺网站&quot; class=&quot;headerlink&quot; title=&quot;使用selenium访问爱奇艺网站&quot;&gt;&lt;/a&gt;使用&lt;code&gt;selenium&lt;/code&gt;访问爱奇艺网站&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;selenium 是一种常用的自动化测试工具。它支持各种浏览器，包括 Chrome，Safari，Firefox 等主流界面式浏览器，如果你在这些浏览器里面安装一个 Selenium 的插件，还可以通过录制，快速生成脚本。&lt;/p&gt;
&lt;p&gt;selenium 支持多种主流的开发语言，比如&lt;code&gt;Ruby&lt;/code&gt;，&lt;code&gt;java&lt;/code&gt;，&lt;code&gt;python&lt;/code&gt;，&lt;code&gt;javascript&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;p&gt;python3.7.3&lt;/p&gt;
&lt;p&gt;运行 &lt;code&gt;pip install selenium&lt;/code&gt; 就可以直接下载最新的selenium版本&lt;/p&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;浏览器:chrome 70.0.3538.77 &lt;/p&gt;
&lt;p&gt;操作系统：win7&lt;/p&gt;
&lt;p&gt;selenium版本: 3.14.1&lt;/p&gt;
&lt;p&gt;chromedriver: &lt;a href=&quot;https://npm.taobao.org/mirrors/chromedriver/70.0.3538.97/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://npm.taobao.org/mirrors/chromedriver/70.0.3538.97/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用selenium-打开和关闭浏览器&quot;&gt;&lt;a href=&quot;#使用selenium-打开和关闭浏览器&quot; class=&quot;headerlink&quot; title=&quot;使用selenium 打开和关闭浏览器&quot;&gt;&lt;/a&gt;使用selenium 打开和关闭浏览器&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; selenium &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; webdriver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver = webdriver.Chrome()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.get(&lt;span class=&quot;string&quot;&gt;&quot;http://www.iqiyi.com/&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver.quit()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="自动化测试" scheme="https://pinghailinfeng.gitee.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="selenium" scheme="https://pinghailinfeng.gitee.io/tags/selenium/"/>
    
      <category term="web test" scheme="https://pinghailinfeng.gitee.io/tags/web-test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://pinghailinfeng.gitee.io/2019/05/28/hello-world/"/>
    <id>https://pinghailinfeng.gitee.io/2019/05/28/hello-world/</id>
    <published>2019-05-27T16:00:00.000Z</published>
    <updated>2019-05-28T00:26:01.942Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>copy maven dependencies to a folder</title>
    <link href="https://pinghailinfeng.gitee.io/2016/09/30/copy-maven-dependencies-to-a-folder/"/>
    <id>https://pinghailinfeng.gitee.io/2016/09/30/copy-maven-dependencies-to-a-folder/</id>
    <published>2016-09-30T05:02:27.000Z</published>
    <updated>2019-05-31T05:04:36.184Z</updated>
    
    <content type="html"><![CDATA[<h1 id="copy-maven-dependencies-to-a-folder"><a href="#copy-maven-dependencies-to-a-folder" class="headerlink" title="copy maven dependencies to a folder"></a>copy maven dependencies to a folder</h1><h2 id="background"><a href="#background" class="headerlink" title="background"></a>background</h2><p>一个简单的需求,当你的同事需要调试代码的时候,他并不想建立maven环境,这时候依赖的jar包 该如何导出呢?</p><h2 id="no-code-say-nothing"><a href="#no-code-say-nothing" class="headerlink" title="no code say nothing"></a>no code say nothing</h2><p>这时候你需要的是<a href="http://maven.apache.org/plugins/maven-dependency-plugin/" target="_blank" rel="noopener">maven-dependency-plugin</a>。</p><h3 id="添加依赖配置"><a href="#添加依赖配置" class="headerlink" title="添加依赖配置"></a>添加依赖配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.eclipse.m2e&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;lifecycle-mapping&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;lifecycleMappingMetadata&gt;</span><br><span class="line">                        &lt;pluginExecutions&gt;</span><br><span class="line">                            &lt;!-- copy-dependency plugin --&gt;</span><br><span class="line">                            &lt;pluginExecution&gt;</span><br><span class="line">                                &lt;pluginExecutionFilter&gt;</span><br><span class="line">                                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                                    &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;</span><br><span class="line">                                    &lt;versionRange&gt;[1.0.0,)&lt;/versionRange&gt;</span><br><span class="line">                                    &lt;goals&gt;</span><br><span class="line">                                        &lt;goal&gt;copy-dependencies&lt;/goal&gt;</span><br><span class="line">                                    &lt;/goals&gt;</span><br><span class="line">                                    &lt;configuration&gt;</span><br><span class="line">                                        &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/alternateLocation&lt;/outputDirectory&gt;</span><br><span class="line">                                        &lt;overWriteReleases&gt;false&lt;/overWriteReleases&gt;</span><br><span class="line">                                        &lt;overWriteSnapshots&gt;false&lt;/overWriteSnapshots&gt;</span><br><span class="line">                                        &lt;overWriteIfNewer&gt;true&lt;/overWriteIfNewer&gt;</span><br><span class="line">                                    &lt;/configuration&gt;</span><br><span class="line">                                &lt;/pluginExecutionFilter&gt;</span><br><span class="line">                                &lt;action&gt;</span><br><span class="line">                                    &lt;ignore /&gt;</span><br><span class="line">                                &lt;/action&gt;</span><br><span class="line">                            &lt;/pluginExecution&gt;</span><br><span class="line">                        &lt;/pluginExecutions&gt;</span><br><span class="line">                    &lt;/lifecycleMappingMetadata&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br></pre></td></tr></table></figure><p>此处的<code>&lt;outputDirectory&gt;</code> 指定了你导出jar包的路径.</p><h3 id="执行命令-mvn-dependency-copy-dependencies"><a href="#执行命令-mvn-dependency-copy-dependencies" class="headerlink" title="执行命令 mvn dependency:copy-dependencies"></a>执行命令 <code>mvn dependency:copy-dependencies</code></h3><h3 id="查看项目多了一个-alternateLocation目录-并且依赖的jar包都下载到这个目录下了。"><a href="#查看项目多了一个-alternateLocation目录-并且依赖的jar包都下载到这个目录下了。" class="headerlink" title="查看项目多了一个/alternateLocation目录,并且依赖的jar包都下载到这个目录下了。"></a>查看项目多了一个<code>/alternateLocation</code>目录,并且依赖的jar包都下载到这个目录下了。</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;copy-maven-dependencies-to-a-folder&quot;&gt;&lt;a href=&quot;#copy-maven-dependencies-to-a-folder&quot; class=&quot;headerlink&quot; title=&quot;copy maven dependencie
      
    
    </summary>
    
      <category term="java" scheme="https://pinghailinfeng.gitee.io/categories/java/"/>
    
    
      <category term="java" scheme="https://pinghailinfeng.gitee.io/tags/java/"/>
    
      <category term="maven" scheme="https://pinghailinfeng.gitee.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>how to use nginx on windows</title>
    <link href="https://pinghailinfeng.gitee.io/2016/09/27/how-to-use-nginx-on-windows/"/>
    <id>https://pinghailinfeng.gitee.io/2016/09/27/how-to-use-nginx-on-windows/</id>
    <published>2016-09-27T02:27:56.000Z</published>
    <updated>2019-05-31T05:04:36.190Z</updated>
    
    <content type="html"><![CDATA[<h1 id="how-to-use-nginx-on-windows"><a href="#how-to-use-nginx-on-windows" class="headerlink" title="how to use nginx on windows"></a>how to use nginx on windows</h1><h2 id="1-Download-nginx-lastest-release-from-here"><a href="#1-Download-nginx-lastest-release-from-here" class="headerlink" title="1. Download nginx lastest release from here."></a>1. Download nginx lastest release from <a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">here</a>.</h2><h2 id="2-unzip-to-your-local-driver-eg-c-apps-nginx"><a href="#2-unzip-to-your-local-driver-eg-c-apps-nginx" class="headerlink" title="2. unzip to your local driver. eg: c:/apps/nginx"></a>2. unzip to your local driver. eg: <code>c:/apps/nginx</code></h2><h2 id="3-start-nginx"><a href="#3-start-nginx" class="headerlink" title="3. start nginx"></a>3. start nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd c:/apps/nginx</span><br><span class="line">start nginx</span><br></pre></td></tr></table></figure><h2 id="4-monitoring-nginx-process"><a href="#4-monitoring-nginx-process" class="headerlink" title="4. monitoring nginx process"></a>4. monitoring nginx process</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tasklist /fi &quot;imagename eq nginx.exe&quot;</span><br><span class="line">Image Name                     PID Session Name        Session#    Mem Usage</span><br><span class="line">========================= ======== ================ =========== ============</span><br><span class="line">nginx.exe                    11700 Console                    1     10,696 K</span><br><span class="line">nginx.exe                     1160 Console                    1     11,180 K</span><br></pre></td></tr></table></figure><p><strong>notice</strong><br>一个是主进程(main process),另一个是工作进程(work process).如果启动失败,请查看错误日志<code>logs\error.log</code></p><h2 id="5-visit-http-localhost-8080"><a href="#5-visit-http-localhost-8080" class="headerlink" title="5. visit http://localhost:8080"></a>5. visit <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></h2><h2 id="6-configuration-file-nginx-conf"><a href="#6-configuration-file-nginx-conf" class="headerlink" title="6. configuration file nginx.conf"></a>6. configuration file <code>nginx.conf</code></h2><p><em>reference config</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">error_log  logs/error.log;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    server &#123;</span><br><span class="line">                listen       8080;</span><br><span class="line">                server_name  localhost;</span><br><span class="line">                location / &#123;</span><br><span class="line">                    root   html;</span><br><span class="line">                    index  index.html index.htm;</span><br><span class="line">                &#125;</span><br><span class="line">                error_page   500 502 503 504  /50x.html;</span><br><span class="line">                location = /50x.html &#123;</span><br><span class="line">                    root   html;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="7-the-command-list-of-nginx："><a href="#7-the-command-list-of-nginx：" class="headerlink" title="7. the command list of nginx："></a>7. the command list of nginx：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop   快速退出</span><br><span class="line">nginx -s quit   优雅退出</span><br><span class="line">nginx -s reload 更换配置，启动新的工作进程，优雅的关闭以往的工作进程</span><br><span class="line">nginx -s reopen 重新打开日志文件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;how-to-use-nginx-on-windows&quot;&gt;&lt;a href=&quot;#how-to-use-nginx-on-windows&quot; class=&quot;headerlink&quot; title=&quot;how to use nginx on windows&quot;&gt;&lt;/a&gt;how t
      
    
    </summary>
    
      <category term="nginx" scheme="https://pinghailinfeng.gitee.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://pinghailinfeng.gitee.io/tags/nginx/"/>
    
      <category term="windows" scheme="https://pinghailinfeng.gitee.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>how git changing author info</title>
    <link href="https://pinghailinfeng.gitee.io/2016/09/22/how-git-changing-author-info/"/>
    <id>https://pinghailinfeng.gitee.io/2016/09/22/how-git-changing-author-info/</id>
    <published>2016-09-22T08:39:05.000Z</published>
    <updated>2019-05-31T05:04:36.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="how-git-changing-author-info"><a href="#how-git-changing-author-info" class="headerlink" title="how git changing author info"></a>how git changing author info</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ol><li><code>gitlab</code>中的统计视图是根据用户的信息统计工作量 </li><li>迁移git repo中经常会遇到用户和邮箱不一致的情况</li></ol><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><p>那么如何修改已经推送到远程的author信息呢?</p><p> <code>github</code> 官方提供的建议<a href="https://help.github.com/articles/changing-author-info/" target="_blank" rel="noopener">如何变更用户信息</a></p><p>同时也有类似的项托管在<code>github</code>上，<a href="https://github.com/jayphelps/git-blame-someone-else" target="_blank" rel="noopener">git-tips-blame-someone-else</a></p><p>思路基本一致,就是替换提交记录、分支、标签里的author信息。</p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><h3 id="1-打开终端或命令行-git-bash"><a href="#1-打开终端或命令行-git-bash" class="headerlink" title="1.打开终端或命令行(git bash)"></a>1.打开终端或命令行(<code>git bash</code>)</h3><h3 id="2-创建一个你项目的全新裸库"><a href="#2-创建一个你项目的全新裸库" class="headerlink" title="2.创建一个你项目的全新裸库"></a>2.创建一个你项目的全新裸库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone --bare https://github.com/user/repo.git</span><br><span class="line">cd repo.git</span><br></pre></td></tr></table></figure><h3 id="3-复制粘贴脚本-并根据你的信息修改下面的变量"><a href="#3-复制粘贴脚本-并根据你的信息修改下面的变量" class="headerlink" title="3.复制粘贴脚本,并根据你的信息修改下面的变量:"></a>3.复制粘贴脚本,并根据你的信息修改下面的变量:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OLD_EMAIL</span><br><span class="line">CORRECT_NAME</span><br><span class="line">CORRECT_EMAIL</span><br></pre></td></tr></table></figure><p>脚本<code>replace.sh</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">git filter-branch --env-filter &apos;</span><br><span class="line"></span><br><span class="line">OLD_EMAIL=&quot;your-old-email@example.com&quot;</span><br><span class="line">CORRECT_NAME=&quot;Your Correct Name&quot;</span><br><span class="line">CORRECT_EMAIL=&quot;your-correct-email@example.com&quot;</span><br><span class="line"></span><br><span class="line">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span><br><span class="line">then</span><br><span class="line">    export GIT_COMMITTER_NAME=&quot;$CORRECT_NAME&quot;</span><br><span class="line">    export GIT_COMMITTER_EMAIL=&quot;$CORRECT_EMAIL&quot;</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span><br><span class="line">then</span><br><span class="line">    export GIT_AUTHOR_NAME=&quot;$CORRECT_NAME&quot;</span><br><span class="line">    export GIT_AUTHOR_EMAIL=&quot;$CORRECT_EMAIL&quot;</span><br><span class="line">fi</span><br><span class="line">&apos; --tag-name-filter cat -- --branches --tags</span><br></pre></td></tr></table></figure></p><h3 id="4-执行这个脚本"><a href="#4-执行这个脚本" class="headerlink" title="4.执行这个脚本"></a>4.执行这个脚本</h3><p><code>sh replace.sh</code></p><h3 id="5-察看Git历史有没有错误"><a href="#5-察看Git历史有没有错误" class="headerlink" title="5.察看Git历史有没有错误"></a>5.察看Git历史有没有错误</h3><p><code>git log</code></p><h3 id="6-强制推送到远程"><a href="#6-强制推送到远程" class="headerlink" title="6.强制推送到远程"></a>6.强制推送到远程</h3><p><code>git push --force --tags origin &#39;refs/heads/*&#39;</code></p><h3 id="7-清除repo-git仓库"><a href="#7-清除repo-git仓库" class="headerlink" title="7.清除repo.git仓库"></a>7.清除repo.git仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br><span class="line">rm -rf repo.git</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;how-git-changing-author-info&quot;&gt;&lt;a href=&quot;#how-git-changing-author-info&quot; class=&quot;headerlink&quot; title=&quot;how git changing author info&quot;&gt;&lt;/a&gt;ho
      
    
    </summary>
    
      <category term="git" scheme="https://pinghailinfeng.gitee.io/categories/git/"/>
    
    
      <category term="git" scheme="https://pinghailinfeng.gitee.io/tags/git/"/>
    
      <category term="github" scheme="https://pinghailinfeng.gitee.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>how to understand git detached HEAD</title>
    <link href="https://pinghailinfeng.gitee.io/2016/08/08/how-to-understand-git-detached-HEAD/"/>
    <id>https://pinghailinfeng.gitee.io/2016/08/08/how-to-understand-git-detached-HEAD/</id>
    <published>2016-08-08T05:30:53.000Z</published>
    <updated>2016-08-19T15:08:13.442Z</updated>
    
    <content type="html"><![CDATA[<h1 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h1><p>远程有一个develop分支，我想获取到本地,但是clone该项目的时候这个远程分支还没有创建,于是执行 <code>git checkout commit_id(develop)</code> 提示如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout f7c774b</span><br><span class="line">Checking out files: 100% (357/357), done.</span><br><span class="line">Note: checking out &apos;f7c774b&apos;.</span><br><span class="line"></span><br><span class="line">You are in &apos;detached HEAD&apos; state. You can look around, make experimental</span><br><span class="line">changes and commit them, and you can discard any commits you make in this</span><br><span class="line">state without impacting any branches by performing another checkout.</span><br><span class="line"></span><br><span class="line">If you want to create a new branch to retain commits you create, you may</span><br><span class="line">do so (now or later) by using -b with the checkout command again. Example:</span><br><span class="line"></span><br><span class="line">  git checkout -b new_branch_name</span><br><span class="line"></span><br><span class="line">HEAD is now at f7c774b... update jeffsui.github.io</span><br></pre></td></tr></table></figure><h2 id="出现-detached-from"><a href="#出现-detached-from" class="headerlink" title="出现 detached from ..."></a>出现 <code>detached from ...</code></h2><p>此时用<code>git branch -av</code>察看分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -av</span><br><span class="line">* (detached from f7c774b) f7c774b update jeffsui.github.io</span><br><span class="line">  master                  6ce1857 Site updated: 2016-08-07 22:09:10</span><br><span class="line">  remotes/origin/HEAD     -&gt; origin/master</span><br><span class="line">  remotes/origin/develop  f7c774b update jeffsui.github.io</span><br><span class="line">  remotes/origin/gh-pages 1eee93f Site updated: 2016-02-13 21:03:46</span><br><span class="line">  remotes/origin/master   6ce1857 Site updated: 2016-08-07 22:09:10</span><br></pre></td></tr></table></figure></p><p>所谓的 <code>detached HEAD</code> 其实就是<code>HEAD</code>指向的是一个<code>commit</code>而不指向任何一个<code>branch</code>的临时分支,翻译过来就是<code>游离</code>.</p><p>众所周知,每一个分支都对应了一个commit,<code>git checkout</code>其实就是修改<code>HEAD</code>文件内容,让它指向不同的分支.</p><h2 id="如何让detached-HEAD所处分支指向远程分支"><a href="#如何让detached-HEAD所处分支指向远程分支" class="headerlink" title="如何让detached HEAD所处分支指向远程分支"></a>如何让<code>detached HEAD</code>所处分支指向远程分支</h2><p>此时的分支你可以执行<code>commit</code>操作,但是无法<code>push</code>到远程分支。<br>那么我们如何把游离状态的分支指向我们指定的远程分支呢。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch origin develop:develop</span><br><span class="line">From https://github.com/jeffsui/jeffsui.github.io</span><br><span class="line"> * [new branch]      develop    -&gt; develop</span><br></pre></td></tr></table></figure></p><p>继续执行<code>git branch -av</code> 命令查看分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -av</span><br><span class="line">* (detached from f7c774b) f7c774b update jeffsui.github.io</span><br><span class="line">  develop                 f7c774b update jeffsui.github.io</span><br><span class="line">  master                  6ce1857 Site updated: 2016-08-07 22:09:10</span><br><span class="line">  remotes/origin/HEAD     -&gt; origin/master</span><br><span class="line">  remotes/origin/develop  f7c774b update jeffsui.github.io</span><br><span class="line">  remotes/origin/gh-pages 1eee93f Site updated: 2016-02-13 21:03:46</span><br><span class="line">  remotes/origin/master   6ce1857 Site updated: 2016-08-07 22:09:10</span><br></pre></td></tr></table></figure><p>此时我们发现多了一个<code>develop</code>分支指向了远程<code>develop</code> 分支，这样我们就可以通过命令<code>git push origin develop:develop</code>到远程分支了。</p><h2 id="更简洁的方法"><a href="#更简洁的方法" class="headerlink" title="更简洁的方法"></a>更简洁的方法</h2><p><code>git fetch origin develop:develop</code> </p><p>or </p><p><code>git checkount -b origin develop:develop</code> 这样可以直接获取远程分支并创建一个本地分支。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h1&gt;&lt;p&gt;远程有一个develop分支，我想获取到本地,但是clone该项目的时候这个远程分支还没有创建,于是执行 &lt;code&gt;git checkou
      
    
    </summary>
    
    
      <category term="git" scheme="https://pinghailinfeng.gitee.io/tags/git/"/>
    
      <category term="版本管理" scheme="https://pinghailinfeng.gitee.io/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>my-angle</title>
    <link href="https://pinghailinfeng.gitee.io/2016/02/15/my-angle/"/>
    <id>https://pinghailinfeng.gitee.io/2016/02/15/my-angle/</id>
    <published>2016-02-15T13:27:07.000Z</published>
    <updated>2016-08-19T15:08:13.443Z</updated>
    
    <content type="html"><![CDATA[<ul><li><img src="http://7xindo.com1.z0.glb.clouddn.com/photoIMG_20160210_132300.jpg" alt></li><li><img src="http://7xindo.com1.z0.glb.clouddn.com/photoIMG_20160210_132850.jpg" alt></li><li><img src="http://7xindo.com1.z0.glb.clouddn.com/photoIMG_20160210_132209.jpg" alt></li><li><img src="http://7xindo.com1.z0.glb.clouddn.com/photoIMG_20160210_132106.jpg" alt></li><li><img src="http://7xindo.com1.z0.glb.clouddn.com/photoIMG_20160210_131838.jpg" alt></li><li><img src="http://7xindo.com1.z0.glb.clouddn.com/photoIMG_20160210_131523.jpg" alt></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;http://7xindo.com1.z0.glb.clouddn.com/photoIMG_20160210_132300.jpg&quot; alt&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;http://7xindo.com1.z0.glb.clo
      
    
    </summary>
    
    
      <category term="photo" scheme="https://pinghailinfeng.gitee.io/tags/photo/"/>
    
  </entry>
  
  <entry>
    <title>windows-mongodb-install</title>
    <link href="https://pinghailinfeng.gitee.io/2016/02/13/windows-mongodb-install/"/>
    <id>https://pinghailinfeng.gitee.io/2016/02/13/windows-mongodb-install/</id>
    <published>2016-02-13T11:27:09.000Z</published>
    <updated>2016-08-19T15:08:13.445Z</updated>
    
    <content type="html"><![CDATA[<p>#windows下mongodb安装</p><p>##下载mongodb</p><p><a href="http://www.mongodb.org/downloads" target="_blank" rel="noopener">http://www.mongodb.org/downloads</a></p><p>##选择自定义安装</p><p>本机路径为:<code>d:\tools\mongodb</code></p><p>##建立如下文件目录<br>数据库路径:<code>d:\tools\mongodb\db</code><br>日志路径:<code>d:\tools\mongodb\log</code><br>配置文件目录<code>d:\tools\mongodb\etc</code><br>建立配置文件<code>d:\tools\mongodb\etc\mongodb.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dbpath=d:\tools\mongodb\db #数据库路径</span><br><span class="line">logpath=d:\tools\mongodb\log\mongodb.log #日志输出文件路径</span><br><span class="line">logappend=true #错误日志采用追加模式，配置这个选项后mongodb的日志会追加到现有的日志文件，而不是从新创建一个新文件</span><br><span class="line">journal=true #启用日志文件，默认启用</span><br><span class="line">quiet=true #这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span><br><span class="line">port=27017 #端口号 默认为27017</span><br></pre></td></tr></table></figure><p>##启动服务</p><p>切换到<code>d:\tools\mongodb\bin</code> 目录下:</p><ul><li>普通启动</li></ul><p><code>mongod --config d:\tools\mongodb\etc\mongodb.conf</code></p><ul><li>注册为windows服务</li></ul><p><code>mongod --config d:\tools\mongodb\etc\mongodb.conf --install</code></p><p><strong>补充</strong> </p><ul><li>windows服务卸载</li></ul><p><code>mongod --remove --serviceName &quot;MongoDB&quot;</code></p><ul><li>启动服务<br><code>net start mongodb</code></li></ul><p>启动成功后,通过浏览器访问 <code>http://localhost:27017</code> ,看到下面的文字,证明启动服务成功！</p><blockquote><p>It looks like you are trying to access MongoDB over HTTP on the native driver port.</p></blockquote><ul><li>关闭服务<br><code>net stop mongodb</code> </li></ul><p>#图形化工具</p><p>官方提供的很全:<a href="https://docs.mongodb.org/ecosystem/tools/administration-interfaces/" target="_blank" rel="noopener">https://docs.mongodb.org/ecosystem/tools/administration-interfaces/</a></p><ul><li><p><a href="http://www.npmjs.org/package/mongo-express" target="_blank" rel="noopener">mongo express </a> –Nodejs</p></li><li><p><a href="http://mongobooster.com" target="_blank" rel="noopener">MongoBooster </a></p></li><li><p><a href="http://edgytech.com/umongo/" target="_blank" rel="noopener">UMongo </a></p></li><li><p><a href="https://github.com/fotonauts/MongoHub-Mac" target="_blank" rel="noopener">MongoHub </a></p></li><li><p><a href="http://blog.mongovue.com/" target="_blank" rel="noopener">MongoVUE</a> –.NET </p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#windows下mongodb安装&lt;/p&gt;
&lt;p&gt;##下载mongodb&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.mongodb.org/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.mongodb
      
    
    </summary>
    
      <category term="db" scheme="https://pinghailinfeng.gitee.io/categories/db/"/>
    
    
      <category term="windows" scheme="https://pinghailinfeng.gitee.io/tags/windows/"/>
    
      <category term="mongodb" scheme="https://pinghailinfeng.gitee.io/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>maven3-jdk1.7-problem-fixed</title>
    <link href="https://pinghailinfeng.gitee.io/2016/02/13/maven3-jdk1-7-problem-fixed/"/>
    <id>https://pinghailinfeng.gitee.io/2016/02/13/maven3-jdk1-7-problem-fixed/</id>
    <published>2016-02-13T08:24:25.000Z</published>
    <updated>2016-08-19T15:08:13.443Z</updated>
    
    <content type="html"><![CDATA[<p>#maven3下jdk1.7编译错误解决</p><p>#环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Apache Maven 3.3.3 (7994120775791599e205a5524ec3e0dfe41d4a06; 2015-04-22T19:57:3</span><br><span class="line">7+08:00)</span><br><span class="line">Maven home: d:\tools\apache-maven-3.3.3</span><br><span class="line">Java version: 1.7.0_45, vendor: Oracle Corporation</span><br><span class="line">Java home: c:\Program Files\Java\jdk1.7.0_45\jre</span><br><span class="line">Default locale: zh_CN, platform encoding: GBK</span><br><span class="line">OS name: &quot;windows 7&quot;, version: &quot;6.1&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;</span><br></pre></td></tr></table></figure></p><p>#使用<code>maven</code>命令行创建java项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate -DgroupId=org.linfeng -DartifactId=mavendemo -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false</span><br></pre></td></tr></table></figure></p><ul><li>创建成功</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd mavendemo &amp;&amp; ls</span><br><span class="line">pom.xml  src</span><br></pre></td></tr></table></figure><ul><li>pom.xml</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">  &lt;groupId&gt;org.linfeng&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;mavendemo&lt;/artifactId&gt;</span><br><span class="line">  &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line">  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  &lt;name&gt;mavendemo&lt;/name&gt;</span><br><span class="line">  &lt;url&gt;http://maven.apache.org&lt;/url&gt;</span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.8.1&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><ul><li>执行maven命令</li></ul><p><code>mvn test</code></p><ul><li>错误信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project mavendemo: Compilation failure</span><br><span class="line">[ERROR] No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK?</span><br></pre></td></tr></table></figure><p>#解决方案</p><ul><li>修改<code>settings.xml</code>,添加jdk1.7相关内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;profile&gt;</span><br><span class="line">    &lt;id&gt;jdk-1.7&lt;/id&gt;</span><br><span class="line">    &lt;activation&gt;</span><br><span class="line">        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">        &lt;jdk&gt;1.7&lt;/jdk&gt;</span><br><span class="line">    &lt;/activation&gt;</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;</span><br><span class="line">        &lt;maven.compiler.compilerVersion&gt;1.7&lt;/maven.compiler.compilerVersion&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line">&lt;/profile&gt;</span><br></pre></td></tr></table></figure><p><em>缺点</em>:修改所有项目的jre环境</p><ul><li>修改当前项目的<code>pom.xml</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.1&lt;/version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;source&gt;1.7&lt;/source&gt;</span><br><span class="line">          &lt;target&gt;1.7&lt;/target&gt;</span><br><span class="line">        &lt;/configuration&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure><p>重新执行<code>mvn build</code> 成功！</p><p>#问题分析<br>Maven官方文档有如下描述：</p><blockquote><p>编译器插件用来编译项目的源文件.从3.0版本开始, 用来编译Java源文件的默认编译器是javax.tools.JavaCompiler (如果你是用的是java 1.6) . 如果你想强制性的让插件使用javac,你必须配置插件选项 forceJavacCompilerUse.<br>同时需要注意的是目前source选项和target 选项的默认设置都是1.5, 与运行Maven时的JDK版本无关.如果你想要改变这些默认设置, 可以参考 Setting the -source and -target of the Java Compiler中的描述来设置 source 和target 选项.</p></blockquote><p>#参考资料</p><ul><li><a href="http://stackoverflow.com/questions/15220392/maven-package-compilation-error" target="_blank" rel="noopener">http://stackoverflow.com/questions/15220392/maven-package-compilation-error</a></li><li><a href="http://www.cnblogs.com/leo100w/p/4017647.html" target="_blank" rel="noopener">http://www.cnblogs.com/leo100w/p/4017647.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#maven3下jdk1.7编译错误解决&lt;/p&gt;
&lt;p&gt;#环境&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="ci" scheme="https://pinghailinfeng.gitee.io/categories/ci/"/>
    
    
      <category term="maven" scheme="https://pinghailinfeng.gitee.io/tags/maven/"/>
    
      <category term="jdk" scheme="https://pinghailinfeng.gitee.io/tags/jdk/"/>
    
      <category term="持续集成" scheme="https://pinghailinfeng.gitee.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>how make cygwin multi-color</title>
    <link href="https://pinghailinfeng.gitee.io/2015/08/12/how-make-cygwin-multi-color/"/>
    <id>https://pinghailinfeng.gitee.io/2015/08/12/how-make-cygwin-multi-color/</id>
    <published>2015-08-11T22:16:59.000Z</published>
    <updated>2016-08-19T15:08:13.441Z</updated>
    
    <content type="html"><![CDATA[<ul><li>打开.bashrc</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># Default to human readable figures</span><br><span class="line"># alias df=&apos;df -h&apos;</span><br><span class="line"># alias du=&apos;du -h&apos;</span><br><span class="line">#</span><br><span class="line"># Misc  </span><br><span class="line"># alias less=&apos;less -r&apos;                          # raw control characters</span><br><span class="line"># alias whence=&apos;type -a&apos;                        # where, of a sort</span><br><span class="line"># alias grep=&apos;grep --color&apos;                     # show differences in colour</span><br><span class="line"># alias egrep=&apos;egrep --color=auto&apos;              # show differences in colour</span><br><span class="line"># alias fgrep=&apos;fgrep --color=auto&apos;              # show differences in colour</span><br><span class="line">#</span><br><span class="line"># Some shortcuts for different directory listings</span><br><span class="line"># alias ls=&apos;ls -hF --color=tty&apos;                 # classify files in colour</span><br><span class="line"># alias dir=&apos;ls --color=auto --format=vertical&apos;</span><br><span class="line"># alias vdir=&apos;ls --color=auto --format=long&apos;</span><br><span class="line"># alias ll=&apos;ls -l&apos;                              # long list</span><br><span class="line"># alias la=&apos;ls -A&apos;                              # all but . and ..</span><br><span class="line"># alias l=&apos;ls -CF&apos;                              #</span><br></pre></td></tr></table></figure><ul><li>而我们要做的只是去掉#，启动即可：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># Default to human readable figures</span><br><span class="line">alias df=&apos;df -h&apos;</span><br><span class="line">alias du=&apos;du -h&apos;</span><br><span class="line">#</span><br><span class="line"># Misc  </span><br><span class="line">alias less=&apos;less -r&apos;                          # raw control characters</span><br><span class="line">alias whence=&apos;type -a&apos;                        # where, of a sort</span><br><span class="line">alias grep=&apos;grep --color&apos;                     # show differences in colour</span><br><span class="line">alias egrep=&apos;egrep --color=auto&apos;              # show differences in colour</span><br><span class="line">alias fgrep=&apos;fgrep --color=auto&apos;              # show differences in colour</span><br><span class="line">#</span><br><span class="line"># Some shortcuts for different directory listings</span><br><span class="line">alias ls=&apos;ls -hF --color=tty&apos;                 # classify files in colour</span><br><span class="line">alias dir=&apos;ls --color=auto --format=vertical&apos;</span><br><span class="line">alias vdir=&apos;ls --color=auto --format=long&apos;</span><br><span class="line">alias ll=&apos;ls -l&apos;                              # long list</span><br><span class="line">alias la=&apos;ls -A&apos;                              # all but . and ..</span><br><span class="line">alias l=&apos;ls -CF&apos;                              #</span><br></pre></td></tr></table></figure><ul><li>然后保存一下，再重启cygwin<br>（或者直接用：<code>source ~/.bashrc</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;打开.bashrc&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="linux" scheme="https://pinghailinfeng.gitee.io/categories/linux/"/>
    
    
      <category term="cygwin" scheme="https://pinghailinfeng.gitee.io/tags/cygwin/"/>
    
  </entry>
  
  <entry>
    <title>how to build a private docker registry</title>
    <link href="https://pinghailinfeng.gitee.io/2015/07/21/how-to-build-a-private-docker-registry/"/>
    <id>https://pinghailinfeng.gitee.io/2015/07/21/how-to-build-a-private-docker-registry/</id>
    <published>2015-07-21T15:09:19.000Z</published>
    <updated>2016-08-19T15:08:13.442Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何搭建docker私服"><a href="#如何搭建docker私服" class="headerlink" title="如何搭建docker私服"></a>如何搭建docker私服</h1><p>##环境准备</p><p>软件包：</p><ul><li><p>centos6.5_x86_64</p></li><li><p>docker-engine-1.7.0-1.el6.x86_64.rpm</p></li></ul><p>docker环境搭建,请参照官方说明，本文采用的是官方的rpm包</p><p>##何谓私服</p><p>官方的image镜像站位dockerhub,因为伟大的墙的缘故,所以下载镜像是很痛苦的一件事。当然你可以采用其他科学上网或者镜像加速的方法来获取image。<br>docker官方也提供了一个私服镜像,大家可以通过<code>docker search registry</code>来查找该镜像。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NAME                                     DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">registry                                 Containerized docker registry                   320       [OK]       </span><br><span class="line">atcol/docker-registry-ui                 A web UI for easy private/local Docker Reg...   55                   [OK]</span><br><span class="line">konradkleine/docker-registry-frontend    Browse and modify your Docker registry in ...   40                   [OK]</span><br><span class="line">samalba/docker-registry                                                                  35</span><br></pre></td></tr></table></figure><p>##下载官方registry镜像</p><ul><li>下载镜像</li></ul><p>使用命令<code>docker pull registry</code>执行下载镜像。</p><ul><li>查看镜像</li></ul><p>下载完毕后,通过<code>docker images</code> 查看该镜像。</p><ul><li>给镜像打标签</li></ul><p>执行这个命令<br><code>docker tag registry:latest localhost:5000/registry:latest</code></p><p>##启动镜像 </p><p><code>docker run -d -e SETTINGS_FLAVOR=dev -e STORAGE_PATH=/tmp/registry -v /opt/data/registry:/tmp/registry  -p 5000:5000 registry</code></p><p>这里有几个参数说明下:</p><ul><li>1.<code>-e STORAGE_PATH=/tmp/registry</code> :强制使用存储路径</li><li>2.<code>-v /opt/data/registry:/tmp/registry</code> :绑定本地镜像存储路径</li><li>3.<code>-p 5000:5000</code>:映射容器5000端口到本地5000端口</li></ul><p>##查看镜像状态</p><p><code>docker ps</code></p><p>##查看私服状态</p><p><code>curl http://localhost:5000</code></p><p>显示如下信息,证明registry启动成功:</p><p><code>&quot;\&quot;docker-registry server\&quot;&quot;</code></p><p>##推送本地镜像库到registry私服</p><p>###1. 第一步 给本地镜像 打tag<br>例如给官方的nginx镜像打tag,执行下面的命令行<br><code>docker pull nginx</code><br><code>docker tag nginx:latest localhost:5000/nginx:latest</code><br>查看镜像库,发现<code>localhost:5000/nginx</code>的镜像已经有了。</p><p>###2. 第二步 推送tag到registry私服</p><p><code>docker push localhost:5000/nginx:latest</code></p><p>###3. 第三步 查看私服镜像列表</p><p><code>curl http://localhost：5000/V1/search</code></p><p>看到类似这样的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;&quot;num_results&quot;: 5, &quot;query&quot;: &quot;&quot;, &quot;results&quot;: [&#123;&quot;description&quot;: null, &quot;name&quot;: &quot;correl/erlang&quot;&#125;, &#123;&quot;description&quot;: null, &quot;name&quot;: &quot;linfeng/cmd&quot;&#125;, &#123;&quot;description&quot;: null, &quot;name&quot;: &quot;library/my_nodejs_image&quot;&#125;, &#123;&quot;description&quot;: null, &quot;name&quot;: &quot;library/centos&quot;&#125;, &#123;&quot;description&quot;: &quot;&quot;, &quot;name&quot;: &quot;library/nginx&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure><p>##拉取私服镜像</p><p><code>docker pull 192.168.20.85:5000/library/centos:7</code></p><p>##结论</p><p>这只是演示如何搭建一个简单的registry私服。因为只有通过命令行方式才能查看私服信息,所以不是很便于操作。下面的博文将演示如何给registry添加web界面。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何搭建docker私服&quot;&gt;&lt;a href=&quot;#如何搭建docker私服&quot; class=&quot;headerlink&quot; title=&quot;如何搭建docker私服&quot;&gt;&lt;/a&gt;如何搭建docker私服&lt;/h1&gt;&lt;p&gt;##环境准备&lt;/p&gt;
&lt;p&gt;软件包：&lt;/p&gt;
&lt;ul&gt;
&lt;l
      
    
    </summary>
    
      <category term="docker" scheme="https://pinghailinfeng.gitee.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://pinghailinfeng.gitee.io/tags/docker/"/>
    
      <category term="registry" scheme="https://pinghailinfeng.gitee.io/tags/registry/"/>
    
      <category term="registry-ui" scheme="https://pinghailinfeng.gitee.io/tags/registry-ui/"/>
    
  </entry>
  
  <entry>
    <title>how git version rollback</title>
    <link href="https://pinghailinfeng.gitee.io/2015/05/16/how-git-version-rollback/"/>
    <id>https://pinghailinfeng.gitee.io/2015/05/16/how-git-version-rollback/</id>
    <published>2015-05-16T13:58:30.000Z</published>
    <updated>2016-08-19T15:08:13.441Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>如何进行远程版本回退……</p></blockquote><p>#引言</p><blockquote><p>一切都要从一个蛋疼的需求开始,老板说,能给远程仓库的版本回退吗？我说为毛？他说我就是试试看git好使不,我……</p></blockquote><p>#咋搞</p><ul><li>背景 </li></ul><p>gitcafe 国内知名的源码托管平台</p><ul><li>分析</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1、git checkout the_branch</span><br><span class="line"></span><br><span class="line">2、git pull</span><br><span class="line"></span><br><span class="line">3、git branch the_branch_backup //备份一下这个分支当前的情况</span><br><span class="line"></span><br><span class="line">4、git reset --hard the_commit_id //把the_branch本地回滚到the_commit_id</span><br><span class="line"></span><br><span class="line">5、git push origin :the_branch //删除远程 the_branch</span><br><span class="line"></span><br><span class="line">6、git push origin the_branch //用回滚后的本地分支重新建立远程分支</span><br><span class="line"></span><br><span class="line">7、git push origin :the_branch_backup //如果前面都成功了，删除这个备份分支</span><br></pre></td></tr></table></figure><ul><li>删除远程分支</li></ul><p>首先,任何一个git源码托管平台都会告诉你,别删除远程master分支,因为它是默认的分支……,请移步<a href="https://gitcafe.com/GitCafe/Help/wiki/%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4-Master-%E5%88%86%E6%94%AF" target="_blank" rel="noopener">这里</a> </p><ul><li>操作步骤 </li></ul><p>如果远程只有一个master分支,请你创建一个非master分支,然后推送到远程。<br>有人会问我为什么？打个比方,你见过上旱厕的时候,给自己脚下站着的板子抽走吗？</p><p>脚本类似下面这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git branch the_master_backup</span><br><span class="line"></span><br><span class="line">git push origin the_master_backup</span><br></pre></td></tr></table></figure><p>此时你查看远程分支应该有两个:master和the_master_backup</p><p>设置默认的分支为 the_master_backup</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git branch -D branch_name //删除本地master分支</span><br><span class="line"></span><br><span class="line">git push :master //推送一个空分支,相当于删除远程master分支</span><br></pre></td></tr></table></figure><p>然后你在the_master_backup分支上 回滚到你要回滚的commit_id,然后重建master分支并推送到远程,顺便删除the_master_backup分支(包括远程the_master_backup分支)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git checkout the_master_backup</span><br><span class="line"></span><br><span class="line">git reset --hard commit_id</span><br><span class="line"></span><br><span class="line">git branch master //重新创建master分支</span><br><span class="line"></span><br><span class="line">git push origin master //重新推送master分支</span><br><span class="line"></span><br><span class="line">git branch -D the_master_backup //删除本地the_master_backup分支</span><br><span class="line"></span><br><span class="line">git push origin :the_master_backup//删除远程the_master_backup分支</span><br></pre></td></tr></table></figure><p>#遇到的问题</p><ol><li>忘记设置默认分支为非master分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">remote: error: By default, deleting the current branch is denied, because the ne</span><br><span class="line">xt</span><br><span class="line">remote: error: &apos;git clone&apos; won&apos;t result in any file checked out, causing confusi</span><br><span class="line">on.</span><br><span class="line">remote: error:</span><br><span class="line">remote: error: You can set &apos;receive.denyDeleteCurrent&apos; configuration variable to</span><br><span class="line"></span><br><span class="line">remote: error: &apos;warn&apos; or &apos;ignore&apos; in the remote repository to allow deleting the</span><br><span class="line"></span><br><span class="line">remote: error: current branch, with or without a warning message.</span><br><span class="line">remote: error:</span><br><span class="line">remote: error: To squelch this message, you can set it to &apos;refuse&apos;.</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>#总结</p><p>如果你遇到的是所有提交只有master分支,那么希望我这个博文能帮到你。当然git强大的分支功能你基本也用不到了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;如何进行远程版本回退……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#引言&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一切都要从一个蛋疼的需求开始,老板说,能给远程仓库的版本回退吗？我说为毛？他说我就是试试看git好使不,我……&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
      <category term="git" scheme="https://pinghailinfeng.gitee.io/categories/git/"/>
    
    
      <category term="git" scheme="https://pinghailinfeng.gitee.io/tags/git/"/>
    
      <category term="gitcafe" scheme="https://pinghailinfeng.gitee.io/tags/gitcafe/"/>
    
      <category term="版本管理" scheme="https://pinghailinfeng.gitee.io/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
</feed>
